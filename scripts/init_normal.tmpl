#cloud-config
write_files:
- content: |
    #!/bin/bash

    ##############
    ### Config ###
    ##############

    CINC_RUN_LIST=$(echo "${cinc_run_list}" | base64 -d)
    CINC_DATA_SECRET="${cinc_data_secret}"
    CINC_ENVIRONMENT="${cinc_environment}"
    CINC_PACKAGE="http://downloads.cinc.sh/files/stable/cinc/16.11.7/ubuntu/20.04/cinc_16.11.7-1_amd64.deb"
    CINC_SERVER="https://chef.uksouth.bink.sh:4444/organizations/bink/"
    CINC_VALIDATOR="bink-validator"
    CINC_VALIDATOR_KEY="LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMzViclhiS05HY1k0b3dUZ1QwTzFYbUYwYW1rZENNQUU3RCs1QnNjbm1nVEFhem1xCnBrbjFqZjhzSmZ0djZFSVZydlhsVUhCbmp0dHUrd09xUlBtWEprWkh6QlJzeGkvb1d2U3pRc01wTG9ZYzdzM0QKZWtYK0EwTGlSd1R6bE1jVENjRXJlVU9YaTNnMTFBd25YRll6ZDRqUDVEbUZSaXpSNGtzMWFqbkhXSXg3U0NuaQpFUW9iOWU5dXMvT0Z5OGRlaVdnWmkzNjdwVldvblplSVNSZkhGZXlZSVBWRnRWVGh5YjE2ZnFydFhIa3lPU0xJCkxBYlpvQWpQODB3VGd6NUJJUDlnY3dFN3cvSFlmbzVCbDhiU2VIblBrMmw5elhKaU5ZejJVTG1EcUlyQlFsK3kKMnNGTDdGVVVQbi9MaU1FOEhkMGNyUUg4TXhlU2I1d3VFMk5ZWHdJREFRQUJBb0lCQVFEQ2xXb3llZkI0VE56Lwphbi80RzVuZEVIMHJHbDF0UHdkSnYwODhTZGY2SDBhQ1NvWnIvNU9YUjBwWnA4L0ZWclhlTlJ1amZKOXpZUjdkCmoxd0FlU0tFNmNjVUlYWmtxRTdUMFgrc2k0SHNma1R4d3Ryckw3eVhnLzYvQmQwaVRub1FGQy9NY2ZtU0pFVGMKVE5ONGRZQ0c5K2JNM1E1U2V6RVJlcGg2NE52Ty81clptUFpmR09TcGIrdWFIa1krU2JXbjNRMDdpVzBxcUxtMgppQytBZFBlY09iN1ZUa085OEFQZE41QzdUcml4c1ZETGRYdUE2eDk3VCt3TDg3WDBnYUQ4RHlmM01sYW9hMDUyCkVrK3BlK01nRlBkWkwyNVorUkF6RzRTQm5PQ0d3c1NSRnBpMFVRSk1OamNsa3J5clB4WXpGdzdROHp1REV0RW4KR0p1YkxoVzVBb0dCQVBJODYvOUVJR005VU84dE5seTRkRUEyQ20xdVVLeENDUE9md2FmVHBFOXQzc3RQQ0RlTwpDN0ZJcERaOGVTenV1SnJRZjRLaTRuWTBLZ3JOK1pDb2lHdGtwRGl1b3BoV1BGV1pDVGdSanNsMENRSDkzZnpaClZWRFduNUlWSVhWTis3ZmNqUElrSmMySGxXS05lVEJsZjZRTWZaV2JCQ3Q5N1JqblYwV1pqMmZqQW9HQkFPeEsKeHVOQTVmejlSYTRhWDlFS1lrUnVJY2xrNWZSQ1dhbmVNbGtmdmRkUmdwUzBkVy95aDR4M3NZUE54WDFlZktwSwo4ZjYvQ0V3MnlhZWJrNkZjaTdNTTNYdUZOeXdDWlBHYmhoUm81ZEV3bTFhZ0lUYmNUT01qaHpSSUo4MmhzTk1QCm1ueDV0OU9pRk50VS9xUnladzJFVkt1Zy9DZ3RlbG0remlCanhkNVZBb0dBRFZ5YzYreTNHS0pHTjVzMzEyOTUKUWgxNC84WkkvdWQ1bE82b0FQamtwRmo4SkJ6TTZEdVdtNFhWUVFnbXF2clVCZjRnT25WL3BtT0VPaXBZYk1sUApGUlZ0Rlk5VWVyQ3ZEVTJ1dTRBRWIwcE9RT1RlL05hRUpUeGhldTVkZFJvREc0WTM1QmRvV21qekxZZCtPdFF1CmNUOGJJa2gxdDJ4dnlxTGdKbitzOEY4Q2dZRUF0ZnVaVmVqanVJYXZwYmsyVmw3eTg5VUdQSDl6QXo0ZXBFODIKNDZFb3FxNWlMWGtXZ1ZOK3hkWmhaeXVSa0U2M0lNaDd2RUVRZVBJeE9ONy9RbVZ1U2tYOFJtZUE2R29ucUZTcApYUXExQlBtMGlYRG1ZOFFqaTBRUG0xcC9IVVlNVTJGUEQ5TUdtdjNYcGx5OWlaVjZmTlNRQ1djQkRVaUpWSms1ClU0VEVIY2tDZ1lCalpOdnNwVVQ3QmpoTVJUais1NVF1L3Z4ZStXNDlYVFJsVFk0VHpWY1FMNnNKMFgyOHFybmsKMlk0bGJsSTdPWG13b1hOc21zNFMzR3Zjc3pEWmJzdTE2cG0yTWVVaWJQNU1YUnAxVjlHUmY5WTRZMHlyRHZvbgprR2dBZjAzM2JlVEhZekphM1hJcDBYaEY3KzdTTHdhRjRJbWplNEJwOEZLSm1WaXJRVDJPWXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
    CINC_TERRAFORM_USER="terraform"
    CINC_TERRAFORM_USER_KEY="LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzhYOE5ERUNPTzl5QW10MmlDaDdCRVpvVXR3L0RMeGRlZGkyK1NSRDA2ck1YNzNwClJZSlF6RU43UHJIL1NsQ0FXWG5YakZHQjFJZVNhMFdrT3hTVUZXN25TTmlGZjFlbWlaaUMxUFlkVXlxTVRVa1YKRkRRNjlranc3R2RHN2p1TnN1TnUrT09OQWtUR0FsclF4dTlZc3dteGJlRkNVa2lnNzlFQzNxRkZHYVpIYzRJSAo5MnRrSE1sS1haekxaZGQxM0srT3BCWFFTWVd1Y1hXV0diMythUkRYMzJ1THIwRW8zbU12bVZBR2paNFcyYk5SCmdZUUt4cE9TbDVaNkZWeW9FbDhHdXRBenNEQmpTWTJBejRRRWtlYVZMM2FFaWVmUmNRem5neDNST2ZONnN5Z1AKK0hDWWhlOWdVUXV0dnoyVDdmMHozNS9XWkNNak83bVBEaUs5Z3dJREFRQUJBb0lCQUFVSzNHd2J0d3J3WCtkZwpEVFdFbFdhT3liRVlxeWNRMHZlSWRXNEZXUm5pbEZFQyt6Y25IQjJtdjAzbUY4VTZQWlFRWjFUZDVKSXN5OENuCmtvdFRCRjFvOWR3U2Q1M0lEQ29QRzQrUXAwQzFIOWY5d2VVN1V5bDB4My9QU1N4cHJFU25Sdnh5SC9lbS9kS2gKdEM3cmkwVlJRcGlwN0tOaDY0TkJ4dWtsRGpxUzJqMXNBdUhpSHUyV0xOM21NQk5vcnB0aVB3V0NxaFZidCtMSQpZUGhZb2VLR21KMExHanorOGVlL09idFRtV3QvNW82RHZ4bjBpK0FDanIwU0s2RFZ1V1h0YkQwUGNGSDJBdmNoCmdjSEwzd2hqQmJ5K1BYbzdtN2ZCWnJEa2p4ajk0R0FWcG9GYTNTZEFIaHprdzB5UXYrZ3RSeU1oRkNtakJ3ZnIKOGhGRWN3RUNnWUVBOXoxMDV0dDA4MXRjRlJ0TWJvSk56ckErYW1ucnBxMGpTT05NWDdUa044VURhUHhQcm5sTgowZVVPdFlOaURLRUhHd3dnK2drOTZ4c3VwTEVLcEx2Z3RzVk9Ia3hsaTFheEtEb1Q5NlJrcDltNG5LZDQ2bkRNCkNXTzhEVVlpMWNOVExhMEIxekdVVE1kRTJDWWc2V241SW52K0hHRHFVdm9UTk9QOHdNNzQ3ZE1DZ1lFQXlyVzEKdWt6eXJYYWtwWG1wUFJvRkdkRlJPMUQyRGJQRkZ1dUs2dyt0d29XbDFELzNreSswYXBXcm02dVJERUtJSE0wNAo2OVpiRkE4ZXY5cEdraW4ySk9yNFVHVmR0WHU0dUhYc3FXei9zUUNxQWtYZTd2U0x0bzVjQWUyZi9ReFJPeUphCm16UFk0ZDZnQXlsRWhRcWswNVJsSEVsSzJsdWdOWHA0ajVSUk01RUNnWUF0d3NBNlluQVpBdFhlU2preFV3algKc3FNNnl2UUUyNUxtVUx1NEV5RVNlWEtTSWZFVmwvb2hXVVlKcnBHZFNNaXA1dXJMbko1TFA3SzRaTlJWZlRpdwpXNENEOXh2c1dGVmQzcklIYWZQL1pUcllNOThiZFZrdWU3azRzN3lLMkNZekZBeDlLZjRLMys4TUdyS0l3VWFOCmJXbXhFdmNMK0tGSmJ0RS9WbytZWlFLQmdRQ3czNXlSMGxKdHlQZ2c2dWNneVhOcDg1cE5oM2NxdlpGYlRtc0kKYjhYTjFZKzhnNVFpZVoyUzRzVzZMeG1BK1F5TEZRWjF3YlAyN0xxSDdJMW5PL1hxZ0p2cWlvZ1pzcnFiT1VvbgpDMVNQdldTYVZ4ME9vNUxFMTdLd2ZBYjlaYUg3Vng1NERlVlFNRkN1Y1hPNEluRnZyQ3dOWW1aTjRXVUpSTE90CmxGekdBUUtCZ0QyaGJVbzdEWTNwRm1LdEU3NmhSVDlWbnV2aFdrb3dDOFdWM1d4d2NXT0sxU2dXcHVMd2xrQnUKbjNiRTBSTi8zZVlMeDFKaElMRm1WM09GdVBreElEeFpoN0Z6bmJDM3pHZmZSZ0kzSnExTWwwNkFxM2gxM3FJawoxdGdOdTlrOEFnU2N6UUhOSEltTjAvdTBKWkpiT2JYMXhnRGJnOHB3L3pzUGk1YkpSUEQ5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="

    #########################
    ### CINC Installation ###
    #########################

    if [ ! -f "/usr/bin/cinc-client" ]; then
        echo "Installing CINC"
        for _ in 1 2 3 4 5; do
            if curl -L "$CINC_PACKAGE" -o "/tmp/cinc.deb"
            then
                echo Downloaded CINC
                break
            else
                sleep 60
            fi
        done
        dpkg -i "/tmp/cinc.deb"
        echo "Installed CINC"
        rm -f "/tmp/cinc.deb"
    fi

    ##########################
    ### CINC Configuration ###
    ##########################

    mkdir -p "/etc/cinc"
    mkdir -p "/etc/chef"

    if [ ! -f "/etc/cinc/client.pem" ]; then
        echo "Setting up chef config files"
        if [ ! -f "/etc/cinc/client.rb" ]; then
            echo "log_location STDOUT" > "/etc/cinc/client.rb"
            echo "validation_client_name \"$CINC_VALIDATOR\"" >> "/etc/cinc/client.rb"
            echo "chef_server_url \"$CINC_SERVER\"" >> "/etc/cinc/client.rb"
            echo "node_name \"$HOSTNAME\"" >> "/etc/cinc/client.rb"
        fi

        if [ ! -f "/etc/cinc/validation.pem" ]; then
            echo "$CINC_VALIDATOR_KEY" | base64 --decode > "/etc/cinc/validation.pem"
        fi

        if [ ! -f "/etc/cinc/terraform.pem" ]; then
            echo "$CINC_TERRAFORM_USER_KEY" | base64 --decode > "/etc/cinc/terraform.pem"
        fi

        if [ ! -f "/etc/cinc/first-boot.json" ]; then
            echo "$CINC_RUN_LIST" > "/etc/cinc/first-boot.json"
        fi

        if [ ! "$CINC_DATA_SECRET" == "" ]; then
            echo "$CINC_DATA_SECRET" > /etc/cinc/encrypted_data_bag_secret
            chmod 600 /etc/cinc/encrypted_data_bag_secret
        fi

        if knife node list --server-url "$CINC_SERVER" --key "/etc/cinc/terraform.pem" --user "$CINC_TERRAFORM_USER" | grep -q "$HOSTNAME"; then
            for i in client node;
                do knife $i delete "$HOSTNAME" --server-url "$CINC_SERVER" --key "/etc/cinc/terraform.pem" --user "$CINC_TERRAFORM_USER" --yes;
            done
        fi

        for i in client.pem client.rb; do
            ln -sf "/etc/cinc/$i" "/etc/chef/$i"
        done

        if [ -f "/etc/cinc/encrypted_data_bag_secret" ]; then
            ln -sf "/etc/cinc/encrypted_data_bag_secret" "/etc/chef/encrypted_data_bag_secret"
        fi

        echo "Running chef-client"
        for _ in 1 2 3 4 5; do
            if cinc-client -j "/etc/cinc/first-boot.json" --environment "$CINC_ENVIRONMENT"
                then
                    echo "Finished running chef"
                    break
                else
                    sleep 60
            fi
        done
    fi

    if [ -f "/etc/cinc/user.pem" ]; then
        echo "Performing file cleanup"
        if [ -f "/etc/cinc/validation.pem" ]; then
            rm -f "/etc/cinc/validation.pem"
        fi

        if [ -f "/etc/cinc/terraform.pem" ]; then
            rm -f "/etc/cinc/terraform.pem"
        fi
    fi
  owner: root:root
  permissions: '0700'
  path: /etc/bink/init.sh
- content: |
    [Unit]
    Description=Bink Init
    After=network.target

    [Service]
    Type=oneshot
    ExecStart=/etc/bink/init.sh
    RemainAfterExit=true
    StandardOutput=journal

    [Install]
    WantedBy=multi-user.target
  owner: root:root
  permissions: '0644'
  path: /etc/systemd/system/binkinit.service
runcmd:
  - [ "systemctl", "daemon-reload" ]
  - [ "systemctl", "enable", "binkinit.service"]
  - [ "systemctl", "start", "binkinit.service", "--no-block" ]
